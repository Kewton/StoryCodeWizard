Message(
    id='msg_01B5XqZupNA7nudGUJig65VF', 
    content=[
        TextBlock(text='# Next.js フロントエンドのアーキテクチャとディレクトリ構成\n\n## アーキテクチャ\n\nこのNext.jsアプリケーションは、主にReact.jsとstyled-componentsを使用してUIコンポーネントを構築しています。アプリケーションはフロントエンドのみで構成され、バックエンドとの通信は現在実装されていません。\n\n主要なコンポーネントは以下の通りです：\n\n1. `Layout`: アプリケーションのメインレイアウトを定義し、`Sidebar`と`ChatWindow`を含む。\n2. `Sidebar`: サイドバーを表示し、チャットルームなどの情報を含む予定。\n3. `ChatWindow`: チャットメッセージを表示し、ユーザーからの入力を処理する。\n4. `DraggableBorder`: サイドバーとチャットウィンドウの間の境界線を表し、サイドバーの表示/非表示を切り替える。\n5. `Icon`: ユーザーまたはシステムを表すアイコンを表示する。\n\n## ディレクトリ構成\n\n```\n./front\n│\n├── src\n│   ├── components\n│   │   ├── ChatWindow.js\n│   │   ├── DraggableBorder.js\n│   │   ├── Icon.js\n│   │   ├── Layout.js\n│   │   └── Sidebar.js\n│   ├── pages\n│   │   ├── _app.tsx\n│   │   ├── _document.tsx\n│   │   ├── api\n│   │   │   └── hello.ts\n│   │   └── index.tsx\n│   └── styles\n│       └── globals.css\n├── package.json\n└── README.md\n```\n\n- `src/components`: UIコンポーネントを含むディレクトリ\n  - `ChatWindow.js`: チャットウィンドウのコンポーネント\n  - `DraggableBorder.js`: サイドバーとチャットウィンドウ間の境界線コンポーネント\n  - `Icon.js`: ユーザーまたはシステムのアイコンコンポーネント\n  - `Layout.js`: アプリケーションのメインレイアウトコンポーネント\n  - `Sidebar.js`: サイドバーコンポーネント\n- `src/pages`: Next.jsのページコンポーネントを含むディレクトリ\n  - `_app.tsx`: アプリケーションのエントリーポイント\n  - `_document.tsx`: カスタムドキュメントの定義\n  - `api/hello.ts`: サンプルのAPIルート\n  - `index.tsx`: トップページ\n- `src/styles`: グローバルスタイルを含むディレクトリ\n  - `globals.css`: グローバルCSSスタイル\n- `package.json`: 依存関係とスクリプトの定義\n- `README.md`: アプリケーションのドキュメンテーション\n\n## コミットメッセージ\n\n```\ndocs: Update README.md with architecture and directory structure\n```\n\n以上が、現在のNext.jsフロントエンドアプリケーションのアーキテクチャとディレクトリ構成の概要です。アプリケーションの成長に伴い、必要に応じてこのドキュメントを更新してください。', type='text')
        ], 
    model='claude-3-opus-20240229',
    role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=Usage(input_tokens=3531, output_tokens=959))



Next.jsで新規で下記ユーザーストーリを実現するwebアプリを開発したいです。ソースコードを出力するとともに、ゼロからのセットアップ手順をREADME.mdに出力してください。
なお、create-next-app@latest実行時、下記の通り全てデフォルト値とします。
✔ Would you like to use TypeScript?　-> Yes
✔ Would you like to use ESLint? -> Yes
✔ Would you like to use Tailwind CSS? -> Yes
✔ Would you like to use `src/` directory? -> Yes
✔ Would you like to use App Router? (recommended) -> Yes
✔ Would you like to customize the default import alias (@/*)? -> No

ユーザーストーリー１：
Teamsに近いチャットインターフェースで人/AI問わず不特定多数のユーザーとコミュニケーションをとりたい