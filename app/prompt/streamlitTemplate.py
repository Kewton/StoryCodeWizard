from app.util.codeopen import fetch_libraryfiles_and_contents, fetch_files_and_contents


def streamlitTemplate(_prerequisites, _input, _libraryFileList, _src_root_path, _ignorelist):
    """Streamlit用コード生成テンプレート"""
    _content = f"""
# 命令指示書
- 現在のソースコードと要求に対し、クリティカルシンキングを活用し、下記手順に従って前提条件と制約条件と技術制約を満たす最高の成果物を生成してください。
    1. 要求を解析し必要に応じて情報を補完してユーザーが本当にやりたいことを言語化する。
    2. 出力結果への評価方法及び前提条件と制約条件と技術制約を満たした合格条件を定義する。
    3. ソースコードが存在する場合、下記に注目して現状認識する
        - databaseのテーブル構造を理解する
        - ディレクトリ構造を整理しアーキテクチャを理解する
        - モジュール間のインターフェースを整理する
        - 各モジュールの処理フローを理解する
    4. ユーザーがやりたいことが障害調査かつエラーログが付与されている場合、3の結果をふまえたうえで下記に注目して原因調査と対策を具体化する
        - エラーが発生している箇所を特定する
        - 特定のモジュールに閉じたエラーなのか他のモジュールに影響するエラーなのか、またdatabaseにも影響を及ぼすのかを判断する
        - 他のモジュールに影響する場合、その影響範囲を特定する
        - クリティカルシンキングを活用し根本原因を特定する
        - 根本原因を取り除く抜本的な解決方針を立案する
        - 解決策を適用すべき範囲を明確にする
    5. 合格条件に合うコードもしくはテキストを出力する
    6. 2の評価方法に従って評価する
    7. 評価結果が合格の場合終了する。不合格の場合は8に進む。
    8. 不合格の事象を事実に基づいて言語化する
    9. 不合格の原因箇所を特定する
    10. 原因を調査し、調査結果に基づいて下記に従う
        - 現状認識誤りの場合は、誤り箇所に注意し認識を修正し、3に戻る
        - ユーザーが付与したエラーログの解釈誤りの場合は誤り内容を明確ご、4に戻る
        - 出力したコードもしくはテキストが誤っている場合は修正し、5に戻る

# 前提条件
- {_prerequisites}
- 開発環境は「macbook air m3」です

# 制約条件
- 出力結果はmarkdown形式とすること
- ユーザーが本当にやりたいことを言語化したものを出力すること
- PythonコードはGoogleスタイル形式でのPython Docstringも出力すること
- Pythonコードのコード規約はflake8に準拠すること
- pytestによるテストコードとテストの実行方法を出力すること
- ソースコードとテキスト共に途中を省略せずに全てを出力すること
- 新規にライブラリのインストールが必要な場合、ライブラリのインストール方法を明確にすること
- 新規にファイル作成が必要な場合、ファイル名と拡張子を明確にしソースコードをフルで出力すること
- 修正が必要な場合は、類似の修正であっても全ての対象箇所を出力すること
- 修正時は、コピペしやすように修正後のファイルの全てのコードを出力すること
  また、変更箇所をわかりやすくするために変更箇所をdiff形式で出力すること
- ./docs/requiredSpecifications.md（要求仕様書）の変更が発生する場合は修正内容を出力すること
- git への commit コメントを出力すること
- 出力結果の妥当性の評価方法及び評価結果を出力すること
- 出力結果に問題が残る場合は再度検討しブラッシュアップすること

# 技術制約
- databaseは[jsonDB](https://github.com/Kewton/jsonDB)を使用すること

---
# 要求
{_input}

---
# 現在のrequirements.txt
{fetch_libraryfiles_and_contents(_libraryFileList)}

---
# 現在のソースコード
{fetch_files_and_contents(_src_root_path, _ignorelist)}
    """
    return _content
